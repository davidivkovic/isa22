# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: isamrs-gke-cluster    # Add your cluster name here.
  GKE_ZONE: europe-central2-a   # Add your cluster zone here.
  DEPLOYMENT_NAME: isamrs-gke-deployment # Add your deployment name here.
  IMAGE: api

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x' ]
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Install dependencies
      run: dotnet restore ./src/app.sln
    - name: Build
      run: dotnet build ./src/app.sln --configuration Release --no-restore
    - name: Test
      run: dotnet test ./src/app.sln --no-restore --verbosity normal

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
        gcloud --quiet components install kubectl

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        cd ./src/services/api
        docker build -t "gcr.io/$PROJECT_ID/$IMAGE:latest" .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:latest"

    - name: Deploy
      run: |-
        kubectl apply -f ./src/kubernetes
        kubectl scale --replicas=0 deployment api-deployment
        kubectl scale --replicas=1 deployment api-deployment